package com.dimovsoft.st25dv_i2c.securityimport android.content.Contextimport android.content.SharedPreferencesimport android.util.Base64import androidx.security.crypto.EncryptedSharedPreferencesimport androidx.security.crypto.MasterKeyimport org.koin.java.KoinJavaComponent.injectimport java.security.SecureRandomprivate const val DB_KEY = "DatabasePasswordKey"class SecurityManager {	private val context: Context by inject(Context::class.java)	fun getDbEncryptionKey(): ByteArray {		val masterKey: MasterKey = MasterKey.Builder(context)			.setKeyScheme(MasterKey.KeyScheme.AES256_GCM)			.build()		val prefs: SharedPreferences = EncryptedSharedPreferences.create(			context,			"secret_shared_prefs",			masterKey,			EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,			EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM		)		if (!prefs.contains(DB_KEY)) {			prefs.edit().putString(DB_KEY, generateKey()).commit()		}		val key = prefs.getString(DB_KEY, null) ?: ""		return key.toByteArray().copyOf(64)	}	private fun generateKey(): String {		val random = SecureRandom()		val bytes = ByteArray(64)		random.nextBytes(bytes)		return Base64.encodeToString(bytes, Base64.DEFAULT)	}}