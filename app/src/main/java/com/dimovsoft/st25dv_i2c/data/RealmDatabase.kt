package com.dimovsoft.st25dv_i2c.dataimport com.dimovsoft.st25dv_i2c.models.RealmCredentialsimport com.dimovsoft.st25dv_i2c.models.RealmDataSampleimport com.dimovsoft.st25dv_i2c.security.SecurityManagerimport io.realm.kotlin.Realmimport io.realm.kotlin.RealmConfigurationimport io.realm.kotlin.notifications.ResultsChangeimport io.realm.kotlin.query.Sortimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.SupervisorJobimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.launchclass RealmDatabase(security: SecurityManager) {	private var database: Realm	private val scope = CoroutineScope(Dispatchers.IO + SupervisorJob())	init {		val config = RealmConfiguration.Builder(schema = setOf(RealmCredentials::class, RealmDataSample::class))			.encryptionKey(security.getDbEncryptionKey())			.build()		database = Realm.open(config)		if (database.query(RealmCredentials::class).first().find() == null) { // No credentials?			fetchInitialCredentials()		}	}	/**	 * Fetch password from DB if present	 */	fun getPasswordForUser(username: String): String? {		return database			.query(RealmCredentials::class, "username == $0", username)			.first()			.find()			?.password	}	/**	 * Add new sample to DB	 */	fun insertSample(sample: RealmDataSample) {		scope.launch {			database.write {				copyToRealm(sample)			}		}	}	/**	 * Get flow of all samples list	 */	fun getSamplesFlow(): Flow<ResultsChange<RealmDataSample>> {		return database			.query(RealmDataSample::class)			.sort("date", Sort.DESCENDING)			.find()			.asFlow()	}	/**	 * MOCK: Insert dummy credentials for demonstration purposes.	 * Should not be in production (not secure).	 * In release initial credentials should arrive from outside (for ex on time Wifi connection)	 */	private fun fetchInitialCredentials() {		scope.launch {			database.write {				val dummyRealmCredentials = RealmCredentials().apply {					username = "user"					password = "1234"				}				copyToRealm(dummyRealmCredentials)			}		}	}}