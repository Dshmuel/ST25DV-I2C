package com.dimovsoft.st25dv_i2c.dataimport com.dimovsoft.st25dv_i2c.models.RealmDataSampleimport com.st.smartaglib.model.SensorDataSampleimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.mapclass DatabaseRepository(private val database: RealmDatabase) {	/**	 * Compare user provided password with one stored in DB	 */	fun checkCredentials(username: String?, password: String?): Boolean {		if (username.isNullOrEmpty() || password.isNullOrEmpty()) {			return false		}		val savedPassword = database.getPasswordForUser(username)		return password == savedPassword	}	/**	 * Add new read sample to DB	 */	fun saveDataSample(sample: SensorDataSample) {		val realmSample = RealmDataSample.from(sample)		database.insertSample(realmSample)	}	/**	 * Get flow fo samples list from DB. Flow will emit new list as soon as it changed.	 */	fun getSamples(): Flow<List<RealmDataSample>> {		return database.getSamplesFlow().map {			it.list.toList()		}	}}